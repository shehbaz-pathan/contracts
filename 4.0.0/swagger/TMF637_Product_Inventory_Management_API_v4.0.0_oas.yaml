openapi: 3.0.1
info:
  title: Product Inventory
  description: |+
    **TMF API Reference : TMF 637 - Product Inventory Management**

    Release : 19.0 - June 2019

    The Product Inventory Management API provides standardized mechanism for product inventory management such as creation, update and retrieval of the representation of a product in the inventory. It also allows the notification of events related to product lifecycle

    **Product resource**
    A product offering procured by a customer or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s).

    Product Inventory API performs the following operations on product :
    - Retrieval of a product or a collection of products depending on filter criteria
    - Partial update of a product (including updating rules and for administration purpose)
    - Creation of a product (including default values and creation rules and for administration purpose)
    - Deletion of a product (for administration purposes)
    - Notification of events on product.

    Copyright Â© TM Forum 2019. All Rights Reserved


  version: 4.0.0
servers:
- url: https://serverRoot/tmf-api/productInventory/v4/
tags:
- name: product
- name: notification listeners (client side)
- name: events subscription
paths:
  /product:
    get:
      tags:
      - product
      summary: List or find Product objects
      description: This operation list or find Product entities
      operationId: listProduct
      parameters:
      - name: fields
        in: query
        description: Comma-separated properties to be provided in response
        schema:
          type: string
      - name: offset
        in: query
        description: Requested index for start of resources to be provided in response
        schema:
          type: integer
      - name: limit
        in: query
        description: Requested number of resources to be provided in response
        schema:
          type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - product
      summary: Creates a Product
      description: This operation creates a Product entity.
      operationId: createProduct
      requestBody:
        description: The Product to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Product_Create'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: product
  /product/{id}:
    get:
      tags:
      - product
      summary: Retrieves a Product by ID
      description: This operation retrieves a Product entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveProduct
      parameters:
      - name: id
        in: path
        description: Identifier of the Product
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Comma-separated properties to provide in response
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - product
      summary: Deletes a Product
      description: This operation deletes a Product entity.
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        description: Identifier of the Product
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content: {}
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - product
      summary: Updates partially a Product
      description: This operation updates partially a Product entity.
      operationId: patchProduct
      parameters:
      - name: id
        in: path
        description: Identifier of the Product
        required: true
        schema:
          type: string
      requestBody:
        description: The Product to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Product_Update'
        required: true
      responses:
        "200":
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: product
  /hub:
    post:
      tags:
      - events subscription
      summary: Register a listener
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        "201":
          description: Subscribed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
      - events subscription
      summary: Unregister a listener
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: unregisterListener
      parameters:
      - name: id
        in: path
        description: The id of the registered listener
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content: {}
        "400":
          description: Bad request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/productCreateEvent:
    post:
      tags:
      - notification listeners (client side)
      summary: Client listener for entity ProductCreateEvent
      description: Example of a client listener for receiving the notification ProductCreateEvent
      operationId: listenToProductCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProductCreateEvent'
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/productAttributeValueChangeEvent:
    post:
      tags:
      - notification listeners (client side)
      summary: Client listener for entity ProductAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification ProductAttributeValueChangeEvent
      operationId: listenToProductAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProductAttributeValueChangeEvent'
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/productStateChangeEvent:
    post:
      tags:
      - notification listeners (client side)
      summary: Client listener for entity ProductStateChangeEvent
      description: Example of a client listener for receiving the notification ProductStateChangeEvent
      operationId: listenToProductStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProductStateChangeEvent'
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/productBatchEvent:
    post:
      tags:
      - notification listeners (client side)
      summary: Client listener for entity ProductBatchEvent
      description: Example of a client listener for receiving the notification ProductBatchEvent
      operationId: listenToProductBatchEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProductBatchEvent'
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/productDeleteEvent:
    post:
      tags:
      - notification listeners (client side)
      summary: Client listener for entity ProductDeleteEvent
      description: Example of a client listener for receiving the notification ProductDeleteEvent
      operationId: listenToProductDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProductDeleteEvent'
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    AgreementItemRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        agreementItemId:
          type: string
          description: Identifier of the agreement
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
    Any:
      type: object
    BillingAccountRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the billing account
        href:
          type: string
          description: Reference of the billing account
        name:
          type: string
          description: Name of the billing account
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: BillingAccount reference. A BillingAccount is a detailed description
        of a bill structure.
    Characteristic:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: Describes a given characteristic of an object or entity through
        a name/value pair.
    EntityRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    Money:
      type: object
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          description: A positive floating point number
          format: float
      description: A base / value business entity used to represent money
    Place:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: Place reference. Place defines the places where the products are
        sold or delivered.
    PlaceRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Place reference. PlaceRef defines the placeRefs where the products
        are sold or delivered.
    Price:
      type: object
      properties:
        percentage:
          type: number
          description: Percentage to apply for ProdOfferPriceAlteration
          format: float
        taxRate:
          type: number
          description: Tax rate
          format: float
        dutyFreeAmount:
          $ref: '#/components/schemas/Money'
        taxIncludedAmount:
          $ref: '#/components/schemas/Money'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: "Provides all amounts (tax included, duty free, tax rate), used\
        \ currency and percentage to apply for Price Alteration."
    PriceAlteration:
      required:
      - price
      - priceType
      type: object
      properties:
        applicationDuration:
          type: integer
          description: Duration during which the alteration applies on the order item
            price (for instance 2 months free of charge for the recurring charge)
        description:
          type: string
          description: A narrative that explains in detail the semantics of this order
            item price alteration
        name:
          type: string
          description: Name of the order item price alteration
        priceType:
          type: string
          description: "A category that describes the price such as recurring, one\
            \ time and usage."
        priority:
          type: integer
          description: Priority level for applying this alteration among all the defined
            alterations on the order item price
        recurringChargePeriod:
          type: string
          description: "Could be month, week..."
        unitOfMeasure:
          type: string
          description: "Could be minutes, GB..."
        price:
          $ref: '#/components/schemas/Price'
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPriceRef'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: "Is an amount, usually of money, that modifies the price charged\
        \ for an order item."
    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the product
        href:
          type: string
          description: Reference of the product
        description:
          type: string
          description: Is the description of the product. It could be copied from
            the description of the Product Offering.
        isBundle:
          type: boolean
          description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
        isCustomerVisible:
          type: boolean
          description: "If true, the product is visible by the customer."
        name:
          type: string
          description: Name of the product. It could be the same as the name of the
            product offering
        orderDate:
          type: string
          description: Is the date when the product was ordered
          format: date-time
        productSerialNumber:
          type: string
          description: Is the serial number for the product. This is typically applicable
            to tangible products e.g. Broadband Router.
        startDate:
          type: string
          description: Is the date from which the product starts
          format: date-time
        terminationDate:
          type: string
          description: Is the date when the product was terminated
          format: date-time
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementItemRef'
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRefOrValue'
        productCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        productOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedProductOrderItem'
        productPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductPrice'
        productRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ProductRelationship'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        productTerm:
          type: array
          items:
            $ref: '#/components/schemas/ProductTerm'
        realizingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
        realizingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ProductStatusType'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: A product offering procured by a customer or other interested party
        playing a party role. A product is realized as one or more service(s) and
        / or resource(s).
    Product_Create:
      required:
      - status
      type: object
      properties:
        description:
          type: string
          description: Is the description of the product. It could be copied from
            the description of the Product Offering.
        isBundle:
          type: boolean
          description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
        isCustomerVisible:
          type: boolean
          description: "If true, the product is visible by the customer."
        name:
          type: string
          description: Name of the product. It could be the same as the name of the
            product offering
        orderDate:
          type: string
          description: Is the date when the product was ordered
          format: date-time
        productSerialNumber:
          type: string
          description: Is the serial number for the product. This is typically applicable
            to tangible products e.g. Broadband Router.
        startDate:
          type: string
          description: Is the date from which the product starts
          format: date-time
        terminationDate:
          type: string
          description: Is the date when the product was terminated
          format: date-time
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementItemRef'
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRefOrValue'
        productCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        productOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedProductOrderItem'
        productPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductPrice'
        productRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ProductRelationship'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        productTerm:
          type: array
          items:
            $ref: '#/components/schemas/ProductTerm'
        realizingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
        realizingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ProductStatusType'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: |-
        A product offering procured by a customer or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s).
        Skipped properties: id,href
    Product_Update:
      type: object
      properties:
        description:
          type: string
          description: Is the description of the product. It could be copied from
            the description of the Product Offering.
        isBundle:
          type: boolean
          description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
        isCustomerVisible:
          type: boolean
          description: "If true, the product is visible by the customer."
        name:
          type: string
          description: Name of the product. It could be the same as the name of the
            product offering
        orderDate:
          type: string
          description: Is the date when the product was ordered
          format: date-time
        productSerialNumber:
          type: string
          description: Is the serial number for the product. This is typically applicable
            to tangible products e.g. Broadband Router.
        startDate:
          type: string
          description: Is the date from which the product starts
          format: date-time
        terminationDate:
          type: string
          description: Is the date when the product was terminated
          format: date-time
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementItemRef'
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRefOrValue'
        productCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        productOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedProductOrderItem'
        productPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductPrice'
        productRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ProductRelationship'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        productTerm:
          type: array
          items:
            $ref: '#/components/schemas/ProductTerm'
        realizingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
        realizingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ProductStatusType'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: |-
        A product offering procured by a customer or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s).
        Skipped properties: id,href
    ProductOfferingPriceRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "ProductPriceOffering reference. An amount, usually of money, that\
        \ is asked for or allowed when a ProductOffering is bought, rented, or leased"
    ProductOfferingRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "ProductOffering reference. A product offering represents entities\
        \ that are orderable from the provider of the catalog, this resource includes\
        \ pricing information."
    ProductPrice:
      required:
      - price
      - priceType
      type: object
      properties:
        description:
          type: string
          description: A narrative that explains in detail the semantics of this product
            price.
        name:
          type: string
          description: A short descriptive name such as "Subscription price".
        priceType:
          type: string
          description: "A category that describes the price, such as recurring, discount,\
            \ allowance, penalty, and so forth."
        recurringChargePeriod:
          type: string
          description: "Could be month, week..."
        unitOfMeasure:
          type: string
          description: "Could be minutes, GB..."
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        price:
          $ref: '#/components/schemas/Price'
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPriceRef'
        productPriceAlteration:
          type: array
          items:
            $ref: '#/components/schemas/PriceAlteration'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: "An amount, usually of money, that represents the actual price\
        \ paid by a Customer for a purchase, a rent or a lease of a Product. The price\
        \ is valid for a defined period of time."
    ProductRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ProductRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the product
        href:
          type: string
          description: Reference of the product
        description:
          type: string
          description: Is the description of the product. It could be copied from
            the description of the Product Offering.
        isBundle:
          type: boolean
          description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
        isCustomerVisible:
          type: boolean
          description: "If true, the product is visible by the customer."
        name:
          type: string
          description: Name of the product. It could be the same as the name of the
            product offering
        orderDate:
          type: string
          description: Is the date when the product was ordered
          format: date-time
        productSerialNumber:
          type: string
          description: Is the serial number for the product. This is typically applicable
            to tangible products e.g. Broadband Router.
        startDate:
          type: string
          description: Is the date from which the product starts
          format: date-time
        terminationDate:
          type: string
          description: Is the date when the product was terminated
          format: date-time
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementItemRef'
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRefOrValue'
        productCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        productOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedProductOrderItem'
        productPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductPrice'
        productRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ProductRelationship'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        productTerm:
          type: array
          items:
            $ref: '#/components/schemas/ProductTerm'
        realizingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
        realizingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ProductStatusType'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "A product to be created defined by value or existing defined by\
        \ reference. The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the product entity and not the RelatedProductRefOrValue class\
        \ itself"
    ProductRelationship:
      required:
      - product
      - relationshipType
      type: object
      properties:
        relationshipType:
          type: string
          description: "Type of the product relationship, such as [bundled] if the\
            \ product is a bundle and you want to describe the bundled products inside\
            \ this bundle; [reliesOn] if the product needs another already owned product\
            \ to rely on (e.g. an option on an already owned mobile access product)\
            \ [targets] or [isTargeted] (depending on the way of expressing the link)\
            \ for any other kind of links that may be useful"
        product:
          $ref: '#/components/schemas/ProductRefOrValue'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: "Linked products to the one instantiate, such as [bundled] if the\
        \ product is a bundle and you want to describe the bundled products inside\
        \ this bundle; [reliesOn] if the product needs another already owned product\
        \ to rely on (e.g. an option on an already owned mobile access product) [targets]\
        \ or [isTargeted] (depending on the way of expressing the link) for any other\
        \ kind of links that may be useful"
    ProductSpecificationRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Version of the product specification
        targetProductSchema:
          $ref: '#/components/schemas/TargetProductSchema'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "Product specification reference: A ProductSpecification is a detailed\
        \ description of a tangible or intangible object made available externally\
        \ in the form of a ProductOffering to customers or other parties playing a\
        \ party role."
    ProductStatusType:
      type: string
      description: Possible values for the status of the product
      enum:
      - created
      - pendingActive
      - cancelled
      - active
      - pendingTerminate
      - terminated
      - suspended
      - 'aborted '
    ProductTerm:
      type: object
      properties:
        description:
          type: string
          description: Description of the productTerm
        name:
          type: string
          description: Name of the productTerm
        duration:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: Description of a productTerm linked to this product. This represent
        a commitment with a duration
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1.0
        units:
          type: string
          description: Unit
      description: An amount in a given unit
    RelatedParty:
      required:
      - '@referredType'
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party
        role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
      - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
        role:
          type: string
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "Related Entity reference. A related place defines a place described\
        \ by reference or by value linked to a specific entity. The polymorphic attributes\
        \ @type, @schemaLocation & @referredType are related to the place entity and\
        \ not the RelatedPlaceRefOrValue class itself"
    RelatedProductOrderItem:
      required:
      - orderItemId
      - productOrderId
      type: object
      properties:
        orderItemAction:
          type: string
          description: Action of the order item for this product
        orderItemId:
          type: string
          description: Identifier of the order item where the product was managed
        productOrderHref:
          type: string
          description: Reference of the related entity.
        productOrderId:
          type: string
          description: Unique identifier of a related entity.
        role:
          type: string
          description: role of the product order item for this product
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: RelatedProductOrderItem (ProductOrder item) .The product order
        item which triggered product creation/change/termination.
    ResourceRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the resource
        value:
          type: string
          description: "The resource value that can be used to identify a resource\
            \ with a public key (e.g.: a tel nr, an msisdn)"
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ServiceRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "Service reference, for when Service is used by other entities"
    TargetProductSchema:
      required:
      - '@schemaLocation'
      - '@type'
      type: object
      properties:
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target
            product
        '@type':
          type: string
          description: Class type of the target product
      description: The reference object to the schema and type of target product which
        is described by product specification
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: "End of the time period, using IETC-RFC-3339 format"
          format: date-time
        startDateTime:
          type: string
          description: "Start of the time period, using IETC-RFC-3339 format. If you\
            \ define a start, you must also define an end"
          format: date-time
      description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
    EventSubscription:
      required:
      - callback
      - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
    EventSubscriptionInput:
      required:
      - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
    ProductCreateEvent:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the Process flow
        href:
          type: string
          description: Reference of the ProcessFlow
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        event:
          $ref: '#/components/schemas/ProductCreateEventPayload'
      description: The notification data structure
    ProductCreateEventPayload:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
      description: The event data structure
    ProductAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/ProductAttributeValueChangeEventPayload'
      description: The notification data structure
    ProductAttributeValueChangeEventPayload:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
      description: The event data structure
    ProductStateChangeEvent:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the Process flow
        href:
          type: string
          description: Reference of the ProcessFlow
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        event:
          $ref: '#/components/schemas/ProductStateChangeEventPayload'
      description: The notification data structure
    ProductStateChangeEventPayload:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
      description: The event data structure
    ProductBatchEvent:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the Process flow
        href:
          type: string
          description: Reference of the ProcessFlow
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        event:
          $ref: '#/components/schemas/ProductBatchEventPayload'
      description: The notification data structure
    ProductBatchEventPayload:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
      description: The event data structure
    ProductDeleteEvent:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the Process flow
        href:
          type: string
          description: Reference of the ProcessFlow
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        event:
          $ref: '#/components/schemas/ProductDeleteEventPayload'
      description: The notification data structure
    ProductDeleteEventPayload:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
      description: The event data structure
    Error:
      required:
      - code
      - reason
      type: object
      properties:
        code:
          type: string
          description: "Application relevant detail, defined in the API or a common\
            \ list."
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown
            to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which
            can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class."
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name."
      description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
x-original-swagger-version: "2.0"
